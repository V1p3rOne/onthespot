name: Release Builder

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  # Windows Build
  windows-build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Run Windows Build Script
        run: scripts\build_windows.bat
        shell: cmd

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v3
        with:
          name: OnTheSpot.exe
          path: dist/OnTheSpot.exe

      - name: Upload to Release (Windows)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/OnTheSpot.exe
          asset_name: OnTheSpot.exe
          asset_content_type: application/octet-stream

  # Linux Build
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf fuse libfuse2 wget

      - name: Run Linux Build Script
        run: scripts/build_linux.sh
        shell: bash

      - name: Upload Linux Executable
        uses: actions/upload-artifact@v3
        with:
          name: OnTheSpot.tar.gz
          path: dist/OnTheSpot.tar.gz

      - name: Upload to Release (Linux)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/OnTheSpot.tar.gz
          asset_name: OnTheSpot.tar.gz
          asset_content_type: application/gzip

  # macOS Build
  macos-build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run macOS Build Script
        run: scripts/build_mac.sh
        shell: bash

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v3
        with:
          name: OnTheSpot.dmg
          path: dist/OnTheSpot.dmg

      - name: Upload to Release (macOS)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/OnTheSpot.dmg
          asset_name: OnTheSpot.dmg
          asset_content_type: application/x-apple-diskimage

  # AppImage Build
  appimage-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg desktop-file-validate fuse patchelf wget

      - name: Run AppImage Build Script
        run: scripts/build_appimage.sh
        shell: bash

      - name: Upload AppImage Executable
        uses: actions/upload-artifact@v3
        with:
          name: OnTheSpot-x86_64.AppImage
          path: dist/OnTheSpot-x86_64.AppImage

      - name: Upload to Release (AppImage)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/OnTheSpot-x86_64.AppImage
          asset_name: OnTheSpot-x86_64.AppImage
          asset_content_type: application/octet-stream
